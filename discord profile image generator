import sys
import random
import sqlite3
from PyQt5.QtWidgets import QApplication, QMainWindow, QPushButton, QVBoxLayout, QLabel, QWidget, QListWidget
from PyQt5.QtGui import QFont

class BingoApp(QMainWindow):
    def __init__(self):
        super().__init__()
        self.init_ui()
        self.db_connection = sqlite3.connect("bingo.db")
        self.db_cursor = self.db_connection.cursor()
        self.create_table()
        self.selected_numbers = set()
        self.initialize_database() 
    def init_ui(self):
        self.central_widget = QWidget()
        self.setCentralWidget(self.central_widget)
        self.layout = QVBoxLayout()
        self.label = QLabel("Bingo Number: ")
        self.label.setFont(QFont("Arial", 50))
        self.layout.addWidget(self.label)
        self.button = QPushButton("Draw Number")
        self.button.clicked.connect(self.draw_number)
        self.layout.addWidget(self.button)
        self.number_list = QListWidget()
        self.layout.addWidget(self.number_list)
        self.central_widget.setLayout(self.layout)

    def create_table(self):
        self.db_cursor.execute("CREATE TABLE IF NOT EXISTS bingo_numbers (number INTEGER PRIMARY KEY);")

    def initialize_database(self):
        total_possible_numbers = 75
        existing_numbers = [row[0] for row in self.db_cursor.execute("SELECT number FROM bingo_numbers")]
        numbers_to_insert = [num for num in range(1, total_possible_numbers + 1) if num not in existing_numbers]

        for number in numbers_to_insert:
            self.db_cursor.execute("INSERT INTO bingo_numbers (number) VALUES (?)", (number,))
        self.db_connection.commit()

    def draw_number(self):
        # Get the count of used numbers in the database
        self.db_cursor.execute("SELECT COUNT(*) FROM bingo_numbers")
        used_count = self.db_cursor.fetchone()[0]

        if used_count < 75:
            remaining_numbers = 75 - used_count
            number = random.randint(1, 75)

            while number in self.selected_numbers:
                number = random.randint(1, 75)

            self.db_cursor.execute("DELETE FROM bingo_numbers WHERE number = ?", (number,))
            self.db_connection.commit()
            self.label.setText(f"Bingo Number: {number}")
            self.selected_numbers.add(number)
            self.update_number_list()
        else:
            self.label.setText("All numbers drawn!")
            self.button.setDisabled(True)

    def update_number_list(self):
        self.number_list.clear()
        sorted_numbers = sorted(self.selected_numbers)
        self.number_list.addItems([str(num) for num in sorted_numbers])

if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = BingoApp()
    window.setWindowTitle("Bingo App")
    window.setGeometry(100, 100, 300, 300)
    window.show()
    sys.exit(app.exec_())
